1ac2bbbee505bca716ed45854bc330ca
"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
var react_1 = __importDefault(require("react"));
var react_native_1 = require("@testing-library/react-native");
var _1 = require("./");
var react_native_2 = require("react-native");
describe('Background', function () {
  it('renders correctly', function () {
    var _ref = (0, react_native_1.render)(react_1.default.createElement(_1.Background, {
        status: "bg",
        sourceImages: ['img1', 'img2'],
        enableBottomInsets: true,
        enableTopInsets: true
      }, react_1.default.createElement(react_native_2.Text, null, "Test"))),
      getByTestId = _ref.getByTestId;
    expect(getByTestId('container')).toBeTruthy();
    expect(getByTestId('imgContainer')).toBeTruthy();
  });
});
describe('RenderImagePart', function () {
  it('renders correctly', function () {
    var _ref2 = (0, react_native_1.render)(react_1.default.createElement(_1.RenderImagePart, {
        img: "testImg",
        id: 0,
        isUri: false,
        images: ['img1', 'img2']
      })),
      getByTestId = _ref2.getByTestId;
    expect(getByTestId('subImgContainer')).toBeTruthy();
    expect(getByTestId('imgStyle')).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiX19pbXBvcnREZWZhdWx0IiwicmVxdWlyZSIsInJlYWN0X25hdGl2ZV8xIiwiXzEiLCJyZWFjdF9uYXRpdmVfMiIsImRlc2NyaWJlIiwiaXQiLCJfcmVmIiwicmVuZGVyIiwiZGVmYXVsdCIsImNyZWF0ZUVsZW1lbnQiLCJCYWNrZ3JvdW5kIiwic3RhdHVzIiwic291cmNlSW1hZ2VzIiwiZW5hYmxlQm90dG9tSW5zZXRzIiwiZW5hYmxlVG9wSW5zZXRzIiwiVGV4dCIsImdldEJ5VGVzdElkIiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9yZWYyIiwiUmVuZGVySW1hZ2VQYXJ0IiwiaW1nIiwiaWQiLCJpc1VyaSIsImltYWdlcyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9wbGF5cmEvbGVlbGEvc3JjL2NvbXBvbmVudHMvQmFja2dyb3VuZC9CYWNrZ3JvdW5kLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJ1xuXG5pbXBvcnQgeyBCYWNrZ3JvdW5kLCBSZW5kZXJJbWFnZVBhcnQgfSBmcm9tICcuLycgLy8gVXBkYXRlIHdpdGggeW91ciBhY3R1YWwgcGF0aFxuaW1wb3J0IHsgVGV4dCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSdcblxuZGVzY3JpYmUoJ0JhY2tncm91bmQnLCAoKSA9PiB7XG4gIGl0KCdyZW5kZXJzIGNvcnJlY3RseScsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGVzdElkIH0gPSByZW5kZXIoXG4gICAgICA8QmFja2dyb3VuZFxuICAgICAgICBzdGF0dXM9XCJiZ1wiXG4gICAgICAgIHNvdXJjZUltYWdlcz17WydpbWcxJywgJ2ltZzInXX1cbiAgICAgICAgZW5hYmxlQm90dG9tSW5zZXRzPXt0cnVlfVxuICAgICAgICBlbmFibGVUb3BJbnNldHM9e3RydWV9XG4gICAgICA+XG4gICAgICAgIDxUZXh0PlRlc3Q8L1RleHQ+XG4gICAgICA8L0JhY2tncm91bmQ+XG4gICAgKVxuXG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKCdjb250YWluZXInKSkudG9CZVRydXRoeSgpXG4gICAgZXhwZWN0KGdldEJ5VGVzdElkKCdpbWdDb250YWluZXInKSkudG9CZVRydXRoeSgpXG4gIH0pXG59KVxuXG5kZXNjcmliZSgnUmVuZGVySW1hZ2VQYXJ0JywgKCkgPT4ge1xuICBpdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPFJlbmRlckltYWdlUGFydFxuICAgICAgICBpbWc9XCJ0ZXN0SW1nXCJcbiAgICAgICAgaWQ9ezB9XG4gICAgICAgIGlzVXJpPXtmYWxzZX1cbiAgICAgICAgaW1hZ2VzPXtbJ2ltZzEnLCAnaW1nMiddfVxuICAgICAgLz5cbiAgICApXG5cbiAgICBleHBlY3QoZ2V0QnlUZXN0SWQoJ3N1YkltZ0NvbnRhaW5lcicpKS50b0JlVHJ1dGh5KClcbiAgICBleHBlY3QoZ2V0QnlUZXN0SWQoJ2ltZ1N0eWxlJykpLnRvQmVUcnV0aHkoKVxuICB9KVxufSlcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsZUFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsY0FBQSxHQUFBRCxPQUFBO0FBRUEsSUFBQUUsRUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsY0FBQSxHQUFBSCxPQUFBO0FBRUFJLFFBQVEsQ0FBQyxZQUFZLEVBQUUsWUFBSztFQUMxQkMsRUFBRSxDQUFDLG1CQUFtQixFQUFFLFlBQUs7SUFDM0IsSUFBQUMsSUFBQSxHQUF3QixJQUFBTCxjQUFBLENBQUFNLE1BQU0sRUFDNUJULE9BQUEsQ0FBQVUsT0FBQSxDQUFBQyxhQUFBLENBQUNQLEVBQUEsQ0FBQVEsVUFBVTtRQUNUQyxNQUFNLEVBQUMsSUFBSTtRQUNYQyxZQUFZLEVBQUUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDO1FBQzlCQyxrQkFBa0IsRUFBRSxJQUFJO1FBQ3hCQyxlQUFlLEVBQUU7TUFBSSxHQUVyQmhCLE9BQUEsQ0FBQVUsT0FBQSxDQUFBQyxhQUFBLENBQUNOLGNBQUEsQ0FBQVksSUFBSSxlQUFZLENBQ04sQ0FDZDtNQVRPQyxXQUFXLEdBQUFWLElBQUEsQ0FBWFUsV0FBVztJQVduQkMsTUFBTSxDQUFDRCxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQ0UsVUFBVSxFQUFFO0lBQzdDRCxNQUFNLENBQUNELFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDRSxVQUFVLEVBQUU7RUFDbEQsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUZkLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxZQUFLO0VBQy9CQyxFQUFFLENBQUMsbUJBQW1CLEVBQUUsWUFBSztJQUMzQixJQUFBYyxLQUFBLEdBQXdCLElBQUFsQixjQUFBLENBQUFNLE1BQU0sRUFDNUJULE9BQUEsQ0FBQVUsT0FBQSxDQUFBQyxhQUFBLENBQUNQLEVBQUEsQ0FBQWtCLGVBQWU7UUFDZEMsR0FBRyxFQUFDLFNBQVM7UUFDYkMsRUFBRSxFQUFFLENBQUM7UUFDTEMsS0FBSyxFQUFFLEtBQUs7UUFDWkMsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE1BQU07TUFBQyxFQUN4QixDQUNIO01BUE9SLFdBQVcsR0FBQUcsS0FBQSxDQUFYSCxXQUFXO0lBU25CQyxNQUFNLENBQUNELFdBQVcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtJQUNuREQsTUFBTSxDQUFDRCxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQ0UsVUFBVSxFQUFFO0VBQzlDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9