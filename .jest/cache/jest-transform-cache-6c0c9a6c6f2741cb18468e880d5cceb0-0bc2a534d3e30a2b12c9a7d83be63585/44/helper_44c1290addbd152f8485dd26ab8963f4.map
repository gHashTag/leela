{"version":3,"names":["auth_1","__importDefault","require","database_1","firestore_1","storage_1","non_secure_1","react_native_image_crop_picker_1","semver_1","constants_1","i18n_1","__importStar","store_1","package_json_1","getFireBaseRef","path","firebase","app","database","ref","exports","getProfile","_ref","_asyncToGenerator2","default","_currentUser","userUid","currentUser","uid","res","response","collection","doc","get","data","err","captureException","apply","arguments","onWin","_ref2","_currentUser2","update","firstGame","finish","start","onStart","_ref3","_currentUser3","createProfile","_ref5","_ref4","email","firstName","lastName","hisObj","count","plan","status","createDate","Date","now","set","owner","lastStepTime","history","lang","flagEmoji","isReported","OnlinePlayer","store","Object","assign","profile","intention","stepTime","canGo","_x","updateFlagEmojiIfNeed","_ref6","_currentUser4","updatePlan","_ref7","_currentUser5","catch","error","_x2","resetPlayer","_ref8","_currentUser6","updateProfName","_ref10","_ref9","_currentUser7","_currentUser8","updateProfile","displayName","getUid","reload","_x3","updateIntention","_ref11","newIntention","_x4","isLoggedIn","_ref12","resetHistory","_ref13","_currentUser9","hist","createHistory","_ref14","values","_currentUser10","FieldValue","arrayUnion","_x5","startStepTimer","newTime","getImagePicker","_ref15","image","openPicker","width","height","cropping","cropperCircleOverlay","sortOrder","compressImageMaxWidth","compressImageMaxHeight","compressImageQuality","compressVideoPreset","includeExif","cropperStatusBarColor","cropperToolbarColor","cropperActiveWidgetColor","cropperToolbarWidgetColor","getIMG","_ref16","fileName","defaultImg","getDownloadURL","_x6","uploadImg","_ref17","photo","fetch","photoBlob","blob","nanoid","substring","lastIndexOf","reference","put","_x7","_currentUser11","getTimeStamp","_ref18","lastTime","_ref18$type","type","dateNow","date","day","difference","t","days","Math","floor","month","getHours","getMinutes","getDate","getMonth","getFullYear","toString","substr","onSignIn","_ref19","user","isKeychain","linkTo","actionsDice","setOnline","emailVerified","prof","accountHasBanAlert","navigate","avatar","blockGoBack","title","screen","OpenPlanReportModal","MessagingStore","onDisconnect","fetchBusinesses","_x8","_x9","_x10","checkVersion","_ref20","minVersion","lt","version","OpenUpdateVersionModal","_x11"],"sources":["/Users/playra/leela/src/screens/helper.ts"],"sourcesContent":["import auth, { FirebaseAuthTypes } from '@react-native-firebase/auth'\nimport {\n  FirebaseDatabaseTypes,\n  firebase\n} from '@react-native-firebase/database'\nimport firestore from '@react-native-firebase/firestore'\nimport storage from '@react-native-firebase/storage'\nimport { nanoid } from 'nanoid/non-secure'\nimport ImagePicker from 'react-native-image-crop-picker'\nimport semver from 'semver'\nimport {\n  OpenPlanReportModal,\n  OpenUpdateVersionModal,\n  accountHasBanAlert,\n  captureException,\n  navigate\n} from '../constants'\nimport i18next, { flagEmoji, lang } from '../i18n'\nimport {\n  MessagingStore,\n  OnlinePlayer,\n  actionsDice,\n  fetchBusinesses\n} from '../store'\nimport { HistoryT, UserT } from '../types'\n\nimport { version } from '../../package.json'\n\ninterface NewProfileI {\n  email: string\n  uid: string\n  firstName: string\n  lastName: string\n}\n\n//firebase help\n\nconst getFireBaseRef = (path: string): FirebaseDatabaseTypes.Reference => {\n  return firebase\n    .app()\n    .database(\n      'https://leela-chakra-default-rtdb.europe-west1.firebasedatabase.app/'\n    )\n    .ref(path)\n}\n\n// Profile operations\n\nconst getProfile = async (): Promise<UserT | undefined> => {\n  const userUid = auth().currentUser?.uid\n  let res\n  try {\n    const response = await firestore().collection('Profiles').doc(userUid).get()\n    res = response.data() as UserT\n  } catch (err) {\n    captureException(err, 'getProfile')\n  }\n  return res\n}\n\nconst onWin = async () => {\n  const userUid = auth().currentUser?.uid\n  firestore().collection('Profiles').doc(userUid).update({\n    firstGame: false,\n    finish: true,\n    start: false\n  })\n}\n\nconst onStart = async () => {\n  const userUid = auth().currentUser?.uid\n  firestore().collection('Profiles').doc(userUid).update({\n    start: true\n  })\n}\n\nconst createProfile = async ({\n  email,\n  uid,\n  firstName,\n  lastName\n}: NewProfileI) => {\n  const hisObj: HistoryT[] = [\n    {\n      count: 0,\n      plan: 68,\n      status: 'start',\n      createDate: Date.now()\n    }\n  ]\n  await firestore()\n    .collection('Profiles')\n    .doc(uid)\n    .set({\n      email,\n      owner: uid,\n      firstName,\n      lastName,\n      plan: 68,\n      lastStepTime: Date.now() - 86400000,\n      start: false,\n      finish: false,\n      firstGame: true,\n      history: hisObj,\n      lang,\n      flagEmoji,\n      isReported: true\n    })\n  OnlinePlayer.store = {\n    ...OnlinePlayer.store,\n    plan: 68,\n    profile: {\n      firstName,\n      lastName,\n      email,\n      intention: ''\n    },\n    stepTime: Date.now() - 86400000,\n    canGo: true,\n    history: hisObj,\n    start: false,\n    finish: false,\n    firstGame: true\n  }\n}\n\nconst updateFlagEmojiIfNeed = async () => {\n  const userUid = auth().currentUser?.uid\n  if (OnlinePlayer.store.flagEmoji !== flagEmoji) {\n    await firestore().collection('Profiles').doc(userUid).update({ flagEmoji })\n    OnlinePlayer.store.flagEmoji = flagEmoji\n  }\n}\n\nconst updatePlan = async (plan: number) => {\n  const userUid = auth().currentUser?.uid\n  if (userUid) {\n    await firestore()\n      .collection('Profiles')\n      .doc(userUid)\n      .update({\n        plan\n      })\n      .catch((error) => captureException(error, 'updatePlan'))\n  }\n}\n\nconst resetPlayer = async () => {\n  const userUid = auth().currentUser?.uid\n  await firestore()\n    .collection('Profiles')\n    .doc(userUid)\n    .update({\n      start: false,\n      finish: false\n    })\n    .catch((error) => captureException(error, 'resetPlayer'))\n}\n\ninterface profNameI {\n  firstName: string\n  lastName: string\n}\nconst updateProfName = async ({ firstName, lastName }: profNameI) => {\n  try {\n    await auth().currentUser?.updateProfile({\n      displayName: `${firstName} ${lastName}`\n    })\n    await firestore().collection('Profiles').doc(getUid()).update({\n      firstName,\n      lastName\n    })\n    await auth().currentUser?.reload()\n    OnlinePlayer.store.profile.firstName = firstName\n    OnlinePlayer.store.profile.lastName = lastName\n  } catch (err) {\n    captureException(err, 'updateProfName')\n  }\n}\nconst updateIntention = async (newIntention: string) => {\n  try {\n    await firestore().collection('Profiles').doc(getUid()).update({\n      intention: newIntention\n    })\n    OnlinePlayer.store.profile.intention = newIntention\n  } catch (err) {\n    captureException(err, 'updateIntention')\n  }\n}\n\nconst isLoggedIn = async () => {\n  if (auth().currentUser) {\n    return true\n  } else {\n    return false\n  }\n}\n\nconst resetHistory = async () => {\n  const userUid = auth().currentUser?.uid\n  const hist: HistoryT[] = [\n    {\n      createDate: Date.now(),\n      plan: 68,\n      count: 0,\n      status: 'start'\n    }\n  ]\n  await firestore().collection('Profiles').doc(userUid).update({\n    history: hist\n  })\n}\n\nconst createHistory = async (values: HistoryT) => {\n  try {\n    const userUid = auth().currentUser?.uid\n    if (userUid) {\n      if (values.count !== 6) {\n        OnlinePlayer.store.canGo = false\n        OnlinePlayer.store.isReported = false\n        await firestore()\n          .collection('Profiles')\n          .doc(userUid)\n          .update({\n            isReported: false,\n            history: firestore.FieldValue.arrayUnion(values)\n          })\n      } else {\n        await firestore()\n          .collection('Profiles')\n          .doc(userUid)\n          .update({\n            history: firestore.FieldValue.arrayUnion(values)\n          })\n      }\n    }\n  } catch (err) {\n    captureException(err, 'createHistory')\n  }\n}\n\nconst startStepTimer = () => {\n  const newTime = Date.now()\n  OnlinePlayer.store.stepTime = newTime\n  OnlinePlayer.store.isReported = true\n  const userUid = getUid()\n  if (userUid) {\n    firestore().collection('Profiles').doc(userUid).update({\n      lastStepTime: newTime,\n      isReported: true\n    })\n  }\n}\n\n// Image operations\n\nconst getImagePicker = async () => {\n  const image = await ImagePicker.openPicker({\n    width: 400,\n    height: 400,\n    cropping: true,\n    cropperCircleOverlay: true,\n    sortOrder: 'none',\n    compressImageMaxWidth: 400,\n    compressImageMaxHeight: 400,\n    compressImageQuality: 1,\n    compressVideoPreset: 'HighestQuality',\n    includeExif: true,\n    cropperStatusBarColor: 'white',\n    cropperToolbarColor: 'white',\n    cropperActiveWidgetColor: 'white',\n    cropperToolbarWidgetColor: '#3498DB'\n  })\n  return image\n}\n\nconst getIMG = async (fileName?: string) => {\n  const defaultImg = require('../../assets/defaultImage/defaultProfileImage.png')\n  if (fileName) {\n    try {\n      return await storage().ref(fileName).getDownloadURL()\n    } catch (error) {\n      return defaultImg\n    }\n  } else {\n    return defaultImg\n  }\n}\n\nconst uploadImg = async (image: { path: string }) => {\n  const photo = await fetch(image.path)\n  const photoBlob = await photo.blob()\n  const fileName = `images/${nanoid(13)}${image.path.substring(\n    image.path.lastIndexOf('/') + 1\n  )}`\n  const reference = storage().ref(fileName)\n  await reference.put(photoBlob)\n  return fileName\n}\n\nfunction getUid() {\n  return auth().currentUser?.uid\n}\n\ninterface getTimeT {\n  lastTime: number\n  type?: '' | '-short'\n}\n\nfunction getTimeStamp({ lastTime, type = '' }: getTimeT) {\n  const dateNow = Date.now()\n  let date: Date = new Date(lastTime)\n\n  const day = 86400000\n  const difference = dateNow - lastTime\n\n  if (difference <= 20000) {\n    return i18next.t(`timestamps${type}.now`)\n  } else if (difference <= day) {\n    return i18next.t(`timestamps${type}.today`)\n  } else if (difference <= day * 2) {\n    return i18next.t(`timestamps${type}.yday`)\n  } else if (difference <= 30 * day) {\n    const days = Math.floor(difference / day)\n    return `${days}${i18next.t(`timestamps${type}.d`)}`\n  } else if (difference < 12 * 30 * day) {\n    const month = Math.floor(difference / (day * 30))\n    return `${month}${i18next.t(`timestamps${type}.m`)}`\n  } else {\n    return `${date.getHours()}:${date.getMinutes()} · ${date.getDate()}/${date.getMonth()}/${date\n      .getFullYear()\n      .toString()\n      .substr(2, 2)}`\n  }\n}\n\nconst onSignIn = async (\n  user: FirebaseAuthTypes.User,\n  isKeychain?: boolean,\n  linkTo?: any\n) => {\n  try {\n    actionsDice.setOnline(true)\n    if (user.emailVerified) {\n      const prof = await getProfile()\n      if (prof?.status === 'ban') {\n        !isKeychain && accountHasBanAlert()\n        return\n      }\n      if (!prof?.firstGame && !prof?.lastName) {\n        navigate('SIGN_UP_USERNAME', { email: user.email })\n      } else if (!prof.avatar) {\n        navigate('SIGN_UP_AVATAR')\n      } else if (!prof.intention) {\n        navigate('CHANGE_INTENTION_SCREEN', {\n          blockGoBack: true,\n          title: i18next.t('online-part.createIntention')\n        })\n      } else {\n        navigate('MAIN', { screen: 'TAB_BOTTOM_0' })\n        if (!prof.isReported) {\n          OpenPlanReportModal(prof.plan)\n        } else if (MessagingStore.path) {\n          linkTo(MessagingStore.path)\n          MessagingStore.path = ''\n        }\n        const reference = getFireBaseRef(`/online/${prof.owner}`)\n        reference.set(true)\n        reference.onDisconnect().set(false)\n        OnlinePlayer.getProfile()\n        fetchBusinesses()\n      }\n    } else {\n      navigate('CONFIRM_SIGN_UP', {\n        email: user.email\n      })\n    }\n  } catch (error) {\n    captureException(error, 'onSignIn')\n  }\n}\n\nconst checkVersion = async (minVersion: string) => {\n  if (semver.lt(version, minVersion)) {\n    OpenUpdateVersionModal()\n  }\n}\n\nexport {\n  updateFlagEmojiIfNeed,\n  uploadImg,\n  updatePlan,\n  updateProfName,\n  getIMG,\n  getImagePicker,\n  getProfile,\n  createHistory,\n  createProfile,\n  isLoggedIn,\n  resetHistory,\n  getFireBaseRef,\n  onWin,\n  onStart,\n  resetPlayer,\n  getTimeStamp,\n  getUid,\n  startStepTimer,\n  onSignIn,\n  checkVersion,\n  updateIntention\n}\n"],"mappings":"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"}