{"version":3,"names":["async_storage_1","__importDefault","require","mobx_1","mobx_persist_store_1","i18n_1","OnlinePlayer_1","DiceStore","makeAutoObservable","init","online","count","startGame","players","message","topMessage","multi","rate","finishArr","exports","autorun","_OnlinePlayer_1$Onlin","OnlinePlayer","store","isReported","canGo","timeText","default","isInitialized","textTopMess","t","actionsDice","setOnline","bool","random","getRandomNumber","Math","floor","get","setPlayers","slice","changePlayer","arr","newArr","lengthArray","length","indexOf","resetPlayer","_resetPlayer","_asyncToGenerator2","map","x","setItem","apply","arguments","setMessage","mess","setRate","_init","makePersistable","name","properties"],"sources":["/Users/playra/leela/src/store/DiceStore.ts"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage'\nimport { autorun, makeAutoObservable } from 'mobx'\nimport { makePersistable } from 'mobx-persist-store'\nimport i18next from '../i18n'\n\nimport { OnlinePlayer } from './OnlinePlayer'\n\nconst DiceStore = makeAutoObservable({\n  init: false,\n  online: false,\n  count: 6,\n  startGame: false,\n  players: 1,\n  message: ' ',\n  topMessage: ' ',\n  multi: 0,\n  rate: false,\n  finishArr: [] as boolean[]\n})\nautorun(() => {\n  const { isReported, canGo, timeText } = OnlinePlayer.store\n  if (i18next.isInitialized) {\n    const textTopMess = DiceStore.online\n      ? !isReported\n        ? i18next.t('online-part.notReported')\n        : canGo\n        ? i18next.t('takeStep')\n        : `${i18next.t('nextStep')}: ${timeText}`\n      : `${i18next.t('playerTurn')} # ${DiceStore.players}`\n    DiceStore.topMessage = textTopMess\n  }\n})\n\nconst actionsDice = {\n  setOnline(bool: boolean): void {\n    DiceStore.online = bool\n  },\n  random(): void {\n    const getRandomNumber = () => Math.floor(Math.random() * 6) + 1\n    let get = getRandomNumber()\n    if (get === DiceStore.count) {\n      get = getRandomNumber()\n    }\n    DiceStore.count = get\n  },\n  setPlayers(players: number): void {\n    DiceStore.multi = players\n    DiceStore.startGame = true\n    DiceStore.finishArr = [true, true, true, true, true, true].slice(0, players)\n  },\n  changePlayer(): void {\n    const arr = DiceStore.finishArr\n    const newArr = arr.slice(DiceStore.players, DiceStore.multi)\n    const lengthArray = newArr.length\n\n    if (DiceStore.multi === DiceStore.players) {\n      DiceStore.players = arr.indexOf(true) + 1\n    } else if (newArr.indexOf(true) === -1) {\n      DiceStore.players = arr.indexOf(true) + 1\n    } else if (newArr.indexOf(true) === 0) {\n      DiceStore.players = DiceStore.players + 1\n    } else if (newArr.indexOf(true) === 1) {\n      DiceStore.players = DiceStore.multi - lengthArray + 2\n    } else if (newArr.indexOf(true) === 2) {\n      DiceStore.players = DiceStore.multi - lengthArray + 3\n    } else if (newArr.indexOf(true) === 3) {\n      DiceStore.players = DiceStore.multi - lengthArray + 4\n    } else {\n      DiceStore.players = DiceStore.multi - lengthArray + 5\n    }\n  },\n  async resetPlayer(): Promise<void> {\n    DiceStore.players = 1\n    DiceStore.startGame = false\n    DiceStore.init = false\n    DiceStore.finishArr = DiceStore.finishArr.map((x: boolean) => x === true)\n    await AsyncStorage.setItem('@init', 'false')\n  },\n  setMessage(mess: string): void {\n    DiceStore.message = mess\n  },\n  setRate(rate: boolean): void {\n    DiceStore.rate = rate\n  },\n  async init(): Promise<void> {\n    await AsyncStorage.setItem('@init', 'true')\n  }\n}\n\nmakePersistable(DiceStore, {\n  name: 'DiceStore',\n  properties: [\n    'count',\n    'startGame',\n    'players',\n    'message',\n    'multi',\n    'finishArr',\n    'init',\n    'rate',\n    'online'\n  ]\n})\n\nexport { DiceStore, actionsDice }\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,eAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,oBAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAJ,eAAA,CAAAC,OAAA;AAEA,IAAAI,cAAA,GAAAJ,OAAA;AAEA,IAAMK,SAAS,GAAG,IAAAJ,MAAA,CAAAK,kBAAkB,EAAC;EACnCC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EACbC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,GAAG;EACZC,UAAU,EAAE,GAAG;EACfC,KAAK,EAAE,CAAC;EACRC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE;CACZ,CAAC;AAsFOC,OAAA,CAAAZ,SAAA,GAAAA,SAAA;AArFT,IAAAJ,MAAA,CAAAiB,OAAO,EAAC,YAAK;EACX,IAAAC,qBAAA,GAAwCf,cAAA,CAAAgB,YAAY,CAACC,KAAK;IAAlDC,UAAU,GAAAH,qBAAA,CAAVG,UAAU;IAAEC,KAAK,GAAAJ,qBAAA,CAALI,KAAK;IAAEC,QAAQ,GAAAL,qBAAA,CAARK,QAAQ;EACnC,IAAIrB,MAAA,CAAAsB,OAAO,CAACC,aAAa,EAAE;IACzB,IAAMC,WAAW,GAAGtB,SAAS,CAACG,MAAM,GAChC,CAACc,UAAU,GACTnB,MAAA,CAAAsB,OAAO,CAACG,CAAC,CAAC,yBAAyB,CAAC,GACpCL,KAAK,GACLpB,MAAA,CAAAsB,OAAO,CAACG,CAAC,CAAC,UAAU,CAAC,GAClBzB,MAAA,CAAAsB,OAAO,CAACG,CAAC,CAAC,UAAU,CAAC,UAAKJ,QAAU,GACtCrB,MAAA,CAAAsB,OAAO,CAACG,CAAC,CAAC,YAAY,CAAC,WAAMvB,SAAS,CAACM,OAAS;IACvDN,SAAS,CAACQ,UAAU,GAAGc,WAAW;;AAEtC,CAAC,CAAC;AAEF,IAAME,WAAW,GAAG;EAClBC,SAAS,WAAAA,UAACC,IAAa;IACrB1B,SAAS,CAACG,MAAM,GAAGuB,IAAI;EACzB,CAAC;EACDC,MAAM,WAAAA,OAAA;IACJ,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA;MAAA,OAASC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACF,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC;IAAA;IAC/D,IAAII,GAAG,GAAGH,eAAe,EAAE;IAC3B,IAAIG,GAAG,KAAK/B,SAAS,CAACI,KAAK,EAAE;MAC3B2B,GAAG,GAAGH,eAAe,EAAE;;IAEzB5B,SAAS,CAACI,KAAK,GAAG2B,GAAG;EACvB,CAAC;EACDC,UAAU,WAAAA,WAAC1B,OAAe;IACxBN,SAAS,CAACS,KAAK,GAAGH,OAAO;IACzBN,SAAS,CAACK,SAAS,GAAG,IAAI;IAC1BL,SAAS,CAACW,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACsB,KAAK,CAAC,CAAC,EAAE3B,OAAO,CAAC;EAC9E,CAAC;EACD4B,YAAY,WAAAA,aAAA;IACV,IAAMC,GAAG,GAAGnC,SAAS,CAACW,SAAS;IAC/B,IAAMyB,MAAM,GAAGD,GAAG,CAACF,KAAK,CAACjC,SAAS,CAACM,OAAO,EAAEN,SAAS,CAACS,KAAK,CAAC;IAC5D,IAAM4B,WAAW,GAAGD,MAAM,CAACE,MAAM;IAEjC,IAAItC,SAAS,CAACS,KAAK,KAAKT,SAAS,CAACM,OAAO,EAAE;MACzCN,SAAS,CAACM,OAAO,GAAG6B,GAAG,CAACI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;KAC1C,MAAM,IAAIH,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACtCvC,SAAS,CAACM,OAAO,GAAG6B,GAAG,CAACI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;KAC1C,MAAM,IAAIH,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACrCvC,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACM,OAAO,GAAG,CAAC;KAC1C,MAAM,IAAI8B,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACrCvC,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACS,KAAK,GAAG4B,WAAW,GAAG,CAAC;KACtD,MAAM,IAAID,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACrCvC,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACS,KAAK,GAAG4B,WAAW,GAAG,CAAC;KACtD,MAAM,IAAID,MAAM,CAACG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACrCvC,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACS,KAAK,GAAG4B,WAAW,GAAG,CAAC;KACtD,MAAM;MACLrC,SAAS,CAACM,OAAO,GAAGN,SAAS,CAACS,KAAK,GAAG4B,WAAW,GAAG,CAAC;;EAEzD,CAAC;EACKG,WAAW;IAAA,IAAAC,YAAA,OAAAC,kBAAA,CAAAtB,OAAA;MACfpB,SAAS,CAACM,OAAO,GAAG,CAAC;MACrBN,SAAS,CAACK,SAAS,GAAG,KAAK;MAC3BL,SAAS,CAACE,IAAI,GAAG,KAAK;MACtBF,SAAS,CAACW,SAAS,GAAGX,SAAS,CAACW,SAAS,CAACgC,GAAG,CAAC,UAACC,CAAU;QAAA,OAAKA,CAAC,KAAK,IAAI;MAAA,EAAC;MACzE,MAAMnD,eAAA,CAAA2B,OAAY,CAACyB,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IAC9C,CAAC;IAAA,SAAAL,YAAA;MAAA,OAAAC,YAAA,CAAAK,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAP,WAAA;EAAA;EACDQ,UAAU,WAAAA,WAACC,IAAY;IACrBjD,SAAS,CAACO,OAAO,GAAG0C,IAAI;EAC1B,CAAC;EACDC,OAAO,WAAAA,QAACxC,IAAa;IACnBV,SAAS,CAACU,IAAI,GAAGA,IAAI;EACvB,CAAC;EACKR,IAAI;IAAA,IAAAiD,KAAA,OAAAT,kBAAA,CAAAtB,OAAA;MACR,MAAM3B,eAAA,CAAA2B,OAAY,CAACyB,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IAC7C,CAAC;IAAA,SAAA3C,KAAA;MAAA,OAAAiD,KAAA,CAAAL,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAA7C,IAAA;EAAA;CACF;AAiBmBU,OAAA,CAAAY,WAAA,GAAAA,WAAA;AAfpB,IAAA3B,oBAAA,CAAAuD,eAAe,EAACpD,SAAS,EAAE;EACzBqD,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,CACV,OAAO,EACP,WAAW,EACX,SAAS,EACT,SAAS,EACT,OAAO,EACP,WAAW,EACX,MAAM,EACN,MAAM,EACN,QAAQ;CAEX,CAAC"}