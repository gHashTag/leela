61ba43eff5f442d3c64008e68ba9da92
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _reactNative = require("react-native");
var _deepMap = _interopRequireDefault(require("./deep-map"));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}



var validScaleSheetRegex = /^(\-?\d+(?:\.\d{1,3})?)@(mv?s(\d+(?:\.\d{1,2})?)?|s|vs)r?$/;

var scaleByAnnotation = function scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale) {return function (value) {
    if (!validScaleSheetRegex.test(value)) {
      return value;
    }

    var regexExecResult = validScaleSheetRegex.exec(value);

    var size = parseFloat(regexExecResult[1]);
    var scaleFunc = regexExecResult[2];
    var scaleFactor = regexExecResult[3];

    if (scaleFactor)
    scaleFunc = scaleFunc.slice(0, -scaleFactor.length);

    var shouldRound = value.endsWith('r');

    var result;

    switch (scaleFunc) {
      case 's':
        result = scale(size);
        break;
      case 'vs':
        result = verticalScale(size);
        break;
      case 'ms':
        result = moderateScale(size, scaleFactor);
        break;
      case 'mvs':
        result = moderateVerticalScale(size, scaleFactor);
        break;
    }

    return shouldRound ? Math.round(result) : result;
  };};

var scaledSheetCreator = function scaledSheetCreator(scale, verticalScale, moderateScale, moderateVerticalScale) {
  var scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);
  return {
    create: function create(styleSheet) {return _reactNative.StyleSheet.create((0, _deepMap.default)(styleSheet, scaleFunc));}
  };
};var _default =

scaledSheetCreator;exports.default = _default;