cf4008daa919577b08c9afee1052349e
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OfflinePlayers = exports.initStore = void 0;
var async_storage_1 = __importDefault(require("@react-native-async-storage/async-storage"));
var mobx_1 = require("mobx");
var mobx_persist_store_1 = require("mobx-persist-store");
var i18n_1 = __importDefault(require("../i18n"));
var helper_1 = require("./helper");
var _1 = require("./");
var constants_1 = require("../constants");
exports.initStore = {
  start: [false, false, false, false, false, false],
  finish: [false, false, false, false, false, false],
  plans: [68, 68, 68, 68, 68, 68],
  histories: [[{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }], [{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }], [{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }], [{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }], [{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }], [{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }], [{
    createDate: Date.now(),
    plan: 68,
    count: 0,
    status: 'start'
  }]]
};
exports.OfflinePlayers = {
  store: (0, mobx_1.makeAutoObservable)(Object.assign({}, exports.initStore)),
  resetGame: function () {
    var _resetGame = (0, _asyncToGenerator2.default)(function* () {
      _1.actionsDice.resetPlayer();
      yield async_storage_1.default.clear();
      exports.OfflinePlayers.store.plans = exports.initStore.plans;
      exports.OfflinePlayers.store.start = exports.initStore.start;
      exports.OfflinePlayers.store.histories = exports.initStore.histories;
      exports.OfflinePlayers.store.finish = exports.initStore.finish;
      (0, constants_1.navigate)('HELLO');
    });
    function resetGame() {
      return _resetGame.apply(this, arguments);
    }
    return resetGame;
  }(),
  startGame: function startGame() {
    _1.actionsDice.setMessage(i18n_1.default.t('sixToBegin'));
  },
  updateStep: function updateStep(id) {
    (0, helper_1.upStepOffline)(id);
  }
};
(0, mobx_persist_store_1.makePersistable)(exports.OfflinePlayers.store, {
  name: 'OfflinePlayers',
  properties: ['plans', 'start', 'histories', 'finish']
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3luY19zdG9yYWdlXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJyZXF1aXJlIiwibW9ieF8xIiwibW9ieF9wZXJzaXN0X3N0b3JlXzEiLCJpMThuXzEiLCJoZWxwZXJfMSIsIl8xIiwiY29uc3RhbnRzXzEiLCJleHBvcnRzIiwiaW5pdFN0b3JlIiwic3RhcnQiLCJmaW5pc2giLCJwbGFucyIsImhpc3RvcmllcyIsImNyZWF0ZURhdGUiLCJEYXRlIiwibm93IiwicGxhbiIsImNvdW50Iiwic3RhdHVzIiwiT2ZmbGluZVBsYXllcnMiLCJzdG9yZSIsIm1ha2VBdXRvT2JzZXJ2YWJsZSIsIk9iamVjdCIsImFzc2lnbiIsInJlc2V0R2FtZSIsIl9yZXNldEdhbWUiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwiYWN0aW9uc0RpY2UiLCJyZXNldFBsYXllciIsImNsZWFyIiwibmF2aWdhdGUiLCJhcHBseSIsImFyZ3VtZW50cyIsInN0YXJ0R2FtZSIsInNldE1lc3NhZ2UiLCJ0IiwidXBkYXRlU3RlcCIsImlkIiwidXBTdGVwT2ZmbGluZSIsIm1ha2VQZXJzaXN0YWJsZSIsIm5hbWUiLCJwcm9wZXJ0aWVzIl0sInNvdXJjZXMiOlsiL1VzZXJzL3BsYXlyYS9sZWVsYS9zcmMvc3RvcmUvT2ZmbGluZVBsYXllcnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFzeW5jU3RvcmFnZSBmcm9tICdAcmVhY3QtbmF0aXZlLWFzeW5jLXN0b3JhZ2UvYXN5bmMtc3RvcmFnZSdcbmltcG9ydCB7IG1ha2VBdXRvT2JzZXJ2YWJsZSB9IGZyb20gJ21vYngnXG5pbXBvcnQgeyBtYWtlUGVyc2lzdGFibGUgfSBmcm9tICdtb2J4LXBlcnNpc3Qtc3RvcmUnXG5pbXBvcnQgaTE4bmV4dCBmcm9tICcuLi9pMThuJ1xuXG5pbXBvcnQgeyB1cFN0ZXBPZmZsaW5lIH0gZnJvbSAnLi9oZWxwZXInXG5cbmltcG9ydCB7IGFjdGlvbnNEaWNlIH0gZnJvbSAnLi8nXG5pbXBvcnQgeyBuYXZpZ2F0ZSB9IGZyb20gJy4uL2NvbnN0YW50cydcbmltcG9ydCB7IEhpc3RvcnlUIH0gZnJvbSAnLi4vdHlwZXMnXG5cbmV4cG9ydCBjb25zdCBpbml0U3RvcmUgPSB7XG4gIHN0YXJ0OiBbZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZV0sXG4gIGZpbmlzaDogW2ZhbHNlLCBmYWxzZSwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2VdLFxuICBwbGFuczogWzY4LCA2OCwgNjgsIDY4LCA2OCwgNjhdLFxuICBoaXN0b3JpZXM6IFtcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XSxcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XSxcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XSxcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XSxcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XSxcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XSxcbiAgICBbeyBjcmVhdGVEYXRlOiBEYXRlLm5vdygpLCBwbGFuOiA2OCwgY291bnQ6IDAsIHN0YXR1czogJ3N0YXJ0JyB9XVxuICBdXG59XG5cbmV4cG9ydCBjb25zdCBPZmZsaW5lUGxheWVycyA9IHtcbiAgc3RvcmU6IG1ha2VBdXRvT2JzZXJ2YWJsZTxPZmZsaW5lUGxheWVyc0k+KHsgLi4uaW5pdFN0b3JlIH0pLFxuICBhc3luYyByZXNldEdhbWUoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgYWN0aW9uc0RpY2UucmVzZXRQbGF5ZXIoKVxuICAgIGF3YWl0IEFzeW5jU3RvcmFnZS5jbGVhcigpXG4gICAgLyog0LLRiyDQv9C+0LTRg9C80LDQtdGC0LUg0YLRg9GCINC80L7QttC90L4g0Y3RgtC+INCy0YHQtSDQt9Cw0LzQtdC90LjRgtGMIDEg0YHRgtGA0L7Rh9C60L7QuTpcbiAgICBgYCBPZmZsaW5lUGxheWVycy5zdG9yZSA9IHsuLi5pbml0U3RvcmV9IGBgLCDQsCDQvdC10YIuINCi0LDQulxuICAgINCyIHBlcnNpc3Qtc3RvcmUg0YDQtdC30YPQu9GM0YLQsNGCINC90LUg0YHQvtGF0YDQsNC90Y/QtdGC0YHRjyAqL1xuICAgIE9mZmxpbmVQbGF5ZXJzLnN0b3JlLnBsYW5zID0gaW5pdFN0b3JlLnBsYW5zXG4gICAgT2ZmbGluZVBsYXllcnMuc3RvcmUuc3RhcnQgPSBpbml0U3RvcmUuc3RhcnRcbiAgICBPZmZsaW5lUGxheWVycy5zdG9yZS5oaXN0b3JpZXMgPSBpbml0U3RvcmUuaGlzdG9yaWVzXG4gICAgT2ZmbGluZVBsYXllcnMuc3RvcmUuZmluaXNoID0gaW5pdFN0b3JlLmZpbmlzaFxuICAgIG5hdmlnYXRlKCdIRUxMTycpXG4gIH0sXG4gIHN0YXJ0R2FtZSgpIHtcbiAgICBhY3Rpb25zRGljZS5zZXRNZXNzYWdlKGkxOG5leHQudCgnc2l4VG9CZWdpbicpKVxuICB9LFxuICB1cGRhdGVTdGVwKGlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICB1cFN0ZXBPZmZsaW5lKGlkKVxuICB9XG59XG5cbm1ha2VQZXJzaXN0YWJsZShPZmZsaW5lUGxheWVycy5zdG9yZSwge1xuICBuYW1lOiAnT2ZmbGluZVBsYXllcnMnLFxuICBwcm9wZXJ0aWVzOiBbJ3BsYW5zJywgJ3N0YXJ0JywgJ2hpc3RvcmllcycsICdmaW5pc2gnXVxufSlcblxuaW50ZXJmYWNlIE9mZmxpbmVQbGF5ZXJzSSB7XG4gIHN0YXJ0OiBib29sZWFuW11cbiAgZmluaXNoOiBib29sZWFuW11c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