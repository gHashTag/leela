423c0bc06e85252b3becc3b4b46220f5
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.actionsDice = exports.DiceStore = void 0;
var async_storage_1 = __importDefault(require("@react-native-async-storage/async-storage"));
var mobx_1 = require("mobx");
var mobx_persist_store_1 = require("mobx-persist-store");
var i18n_1 = __importDefault(require("../i18n"));
var OnlinePlayer_1 = require("./OnlinePlayer");
var storageAdapter_1 = require("./storageAdapter");
var DiceStore = (0, mobx_1.makeAutoObservable)({
  init: false,
  online: false,
  count: 6,
  startGame: false,
  players: 1,
  message: ' ',
  topMessage: ' ',
  multi: 0,
  rate: false,
  finishArr: []
});
exports.DiceStore = DiceStore;
(0, mobx_1.autorun)(function () {
  if (OnlinePlayer_1.OnlinePlayer && OnlinePlayer_1.OnlinePlayer.store) {
    var _OnlinePlayer_1$Onlin = OnlinePlayer_1.OnlinePlayer.store,
      isReported = _OnlinePlayer_1$Onlin.isReported,
      canGo = _OnlinePlayer_1$Onlin.canGo,
      timeText = _OnlinePlayer_1$Onlin.timeText;
    if (i18n_1.default.isInitialized) {
      var textTopMess = DiceStore.online ? !isReported ? i18n_1.default.t('online-part.notReported') : canGo ? i18n_1.default.t('takeStep') : i18n_1.default.t('nextStep') + ": " + timeText : i18n_1.default.t('playerTurn') + " # " + DiceStore.players;
      DiceStore.topMessage = textTopMess;
    }
  }
});
var actionsDice = {
  setOnline: function setOnline(bool) {
    DiceStore.online = bool;
  },
  random: function random() {
    var getRandomNumber = function getRandomNumber() {
      return Math.floor(Math.random() * 6) + 1;
    };
    var get = getRandomNumber();
    if (get === DiceStore.count) {
      get = getRandomNumber();
    }
    DiceStore.count = get;
  },
  setPlayers: function setPlayers(players) {
    DiceStore.multi = players;
    DiceStore.startGame = true;
    DiceStore.finishArr = [true, true, true, true, true, true].slice(0, players);
  },
  changePlayer: function changePlayer() {
    var arr = DiceStore.finishArr;
    var newArr = arr.slice(DiceStore.players, DiceStore.multi);
    var lengthArray = newArr.length;
    if (DiceStore.multi === DiceStore.players) {
      DiceStore.players = arr.indexOf(true) + 1;
    } else if (newArr.indexOf(true) === -1) {
      DiceStore.players = arr.indexOf(true) + 1;
    } else if (newArr.indexOf(true) === 0) {
      DiceStore.players = DiceStore.players + 1;
    } else if (newArr.indexOf(true) === 1) {
      DiceStore.players = DiceStore.multi - lengthArray + 2;
    } else if (newArr.indexOf(true) === 2) {
      DiceStore.players = DiceStore.multi - lengthArray + 3;
    } else if (newArr.indexOf(true) === 3) {
      DiceStore.players = DiceStore.multi - lengthArray + 4;
    } else {
      DiceStore.players = DiceStore.multi - lengthArray + 5;
    }
  },
  resetPlayer: function () {
    var _resetPlayer = (0, _asyncToGenerator2.default)(function* () {
      DiceStore.players = 1;
      DiceStore.startGame = false;
      DiceStore.init = false;
      DiceStore.finishArr = DiceStore.finishArr.map(function (x) {
        return x === true;
      });
      yield async_storage_1.default.setItem('@init', 'false');
    });
    function resetPlayer() {
      return _resetPlayer.apply(this, arguments);
    }
    return resetPlayer;
  }(),
  setMessage: function setMessage(mess) {
    DiceStore.message = mess;
  },
  setRate: function setRate(rate) {
    DiceStore.rate = rate;
  },
  init: function () {
    var _init = (0, _asyncToGenerator2.default)(function* () {
      yield async_storage_1.default.setItem('@init', 'true');
    });
    function init() {
      return _init.apply(this, arguments);
    }
    return init;
  }()
};
exports.actionsDice = actionsDice;
(0, mobx_persist_store_1.makePersistable)(DiceStore, {
  name: 'DiceStore',
  properties: ['count', 'startGame', 'players', 'message', 'multi', 'finishArr', 'init', 'rate', 'online'],
  storage: storageAdapter_1.storageAdapter
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,